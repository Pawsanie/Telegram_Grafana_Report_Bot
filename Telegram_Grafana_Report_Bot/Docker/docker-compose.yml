version: '3.8'
name: Telegram_Grafana_Report_bot
services:

  telegram_grafana_report_bot:
    build:
      context: ..
      dockerfile: ./Docker/Dockerfile
    container_name: Telegram_Grafana_Report_Bot
    volumes:
      - ../Source_code:/application/Source_code
      - ../config.json:/application/temporary_config.json:rw
      - ./requirements.txt:/requirements.txt
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHANNEL_ID=${TELEGRAM_CHANNEL_ID}
      - TELEGRAM_BOT_DM_WHITE_LIST=${TELEGRAM_BOT_DM_WHITE_LIST}
      - GRAFANA_TOKEN=${GRAFANA_TOKEN}
      - TELEGRAM_BOT_CHANNEL_WHITE_LIST=${TELEGRAM_BOT_CHANNEL_WHITE_LIST}
      - GRAFANA_URL=${GRAFANA_URL}
    networks:
      - external_network
      - grafana_network
    ports:
      - "8443:8443"
      - "443:443"
      - "80:80"
    restart: always

  example_grafana:
    image: grafana/grafana:11.2.2
    platform: linux/amd64
    container_name: Example_Grafana
    depends_on:
      - grafana_renderer
    ports:
      - "3000:3000"
    networks:
      - grafana_network
    environment:
      - GF_SERVER_ROOT_URL=${GRAFANA_URL}
      - GRAFANA_TOKEN=${GRAFANA_TOKEN}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_DASHBOARDS_JSON_ENABLED=true
      - GF_RENDERING_SERVER_URL=${GRAFANA_RENDER_SERVER_URL}
      - GF_RENDERING_CALLBACK_URL=${GRAFANA_URL}
    volumes:
      - grafana_persistent_storage:/var/lib/grafana
      - ../Grafana/dashboards:/var/lib/grafana/dashboards
      - ../Grafana/dashboards_setting.yaml:/etc/grafana/provisioning/dashboards/dashboards_setting.yaml
    restart: always

  grafana_renderer:
    container_name: Grafana_Image_Renderer
    image: grafana/grafana-image-renderer:3.11.5
    ports:
      - "8081:8081"
    networks:
      - grafana_network
    environment:
      - ENABLE_METRICS=true
      - RENDERING_MODE=clustered
      - RENDERING_CLUSTERING_MODE=context
      - RENDERING_CLUSTERING_MAX_CONCURRENCY=6
      - GRAFANA_RENDERER_CALLBACK_URL=${GRAFANA_URL}
    restart: always

volumes:
  grafana_persistent_storage:

networks:
  external_network:
    driver: bridge
  grafana_network: